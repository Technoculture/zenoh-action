
initial,
broken_without_holdings,
awaiting_clearance,
healthy {
    idle,
    busy:   entry/  progress = 0,
    done,
    stopped,
    awaiting_clearance,
    clearance_timeout;

    initial => idle;
    idle                    => busy                 : TASK_START;
    busy                    => stopped              : TASK_STOP;
    busy                    => failed               : INTERNAL_TASK_FAIL;
    failed                  => unhealthy;
    stopped                 => awaiting_clearance   : AWAIT_CLEARANCE;
    busy                    => done                 : INTERNAL_TASK_DONE;
    done                    => awaiting_clearance   : AWAIT_CLEARANCE;
    awaiting_clearance      => idle                 : CLEAR_DONE;
    awaiting_clearance      => clearance_timeout    : INTERNAL_TIMEOUT_CLEARANCE;
    clearance_timeout       => unhealthy;
},
unhealthy {
    awaiting_clearance_err,
    broken_with_holdings,
    broken_without_holdings;

    awaiting_clearance_err  => cleared : CLEAR_DONE;
    awaiting_clearance_err  => broken_with_holdings : INTERNAL_TIMEOUT_CLEARANCE;
    cleared                     => broken_without_holdings;
};

    broken_with_holdings        => final;
    broken_without_holdings     => final;
